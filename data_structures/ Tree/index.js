
// –ö–ª–∞—Å—Å –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è —É–∑–ª–∞ –¥–µ—Ä–µ–≤–∞
class TreeNode {
  constructor(value) {
    this.value = value;      // –ó–Ω–∞—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —É–∑–ª–∞
    this.children = [];      // –°–ø–∏—Å–æ–∫ –¥–æ—á–µ—Ä–Ω–∏—Ö —É–∑–ª–æ–≤ (–ø–æ—Ç–æ–º–∫–æ–≤)
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ—Ç–æ–º–∫–∞
  addChild(childNode) {
    this.children.push(childNode);
  }

  // –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –æ–±—Ö–æ–¥ –¥–µ—Ä–µ–≤–∞ (–≥–ª—É–±–∏–Ω–∞ —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ)
  traverse(depth = 0) {
    console.log(' '.repeat(depth * 2) + this.value); // –û—Ç—Å—Ç—É–ø –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ —É—Ä–æ–≤–Ω—è
    this.children.forEach(child => child.traverse(depth + 1));
  }

  // –ü–æ–∏—Å–∫ —É–∑–ª–∞ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π)
  find(value) {
    if (this.value === value) return this;

    for (const child of this.children) {
      const result = child.find(value);
      if (result) return result;
    }

    return null;
  }

  // –£–¥–∞–ª–µ–Ω–∏–µ —É–∑–ª–∞ (—Ç–æ–ª—å–∫–æ —Å—Ä–µ–¥–∏ –ø—Ä—è–º—ã—Ö –¥–µ—Ç–µ–π)
  removeChild(value) {
    this.children = this.children.filter(child => child.value !== value);
  }
}


// –°–æ–∑–¥–∞—ë–º –∫–æ—Ä–µ–Ω—å –¥–µ—Ä–µ–≤–∞
const root = new TreeNode("CEO");

// –î–æ–±–∞–≤–ª—è–µ–º –¥–æ—á–µ—Ä–Ω–∏–µ —É–∑–ª—ã
const cto = new TreeNode("CTO");
const cfo = new TreeNode("CFO");
const coo = new TreeNode("COO");

root.addChild(cto);
root.addChild(cfo);
root.addChild(coo);

// –£–≥–ª—É–±–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å
const devManager = new TreeNode("Dev Manager");
cto.addChild(devManager);

const engineer = new TreeNode("Software Engineer");
devManager.addChild(engineer);

// –û–±—Ö–æ–¥ –¥–µ—Ä–µ–≤–∞ —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏
console.log("üå≥ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–µ—Ä–µ–≤–∞:");
root.traverse();

// –ü–æ–∏—Å–∫
const found = root.find("Software Engineer");
console.log("\nüîç –ù–∞–π–¥–µ–Ω —É–∑–µ–ª:", found?.value);

// –£–¥–∞–ª–µ–Ω–∏–µ
cto.removeChild("Dev Manager");

console.log("\nüóëÔ∏è –ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è Dev Manager:");
root.traverse();
