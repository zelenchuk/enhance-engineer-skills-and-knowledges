// –°–æ–∑–¥–∞—ë–º –º–∞—Å—Å–∏–≤ –¥–ª–∏–Ω–æ–π 6120, –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–π –µ–¥–∏–Ω–∏—Ü–∞–º–∏
const arr = new Array(6120).fill(1);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –ø–∞–º—è—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–µ–π fn
const measure = (fn, label = 'Function') => {
  // –°–Ω–∏–º–æ–∫ –ø–∞–º—è—Ç–∏ –¥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
  const before = process.memoryUsage();

  // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–∏—Ä—É–µ–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
  fn();

  // –°–Ω–∏–º–æ–∫ –ø–∞–º—è—Ç–∏ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
  const after = process.memoryUsage();

  // –†–∞—Å—á—ë—Ç —Ä–∞–∑–Ω–∏—Ü—ã –≤ –ø–∞–º—è—Ç–∏ (heapUsed) –∏ –≤—ã–≤–æ–¥ –≤ –º–µ–≥–∞–±–∞–π—Ç–∞—Ö
  const used = ((after.heapUsed - before.heapUsed) / 1024 / 1024).toFixed(2);
  console.log(`[${label}] Used heap: ${used} MB`);
};

// ‚ùó –ú–µ–¥–ª–µ–Ω–Ω–∞—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç arr.slice(1), —Å–æ–∑–¥–∞–≤–∞—è –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –Ω–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ
// –≠—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –±–æ–ª—å—à–æ–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–∞—Å—Å–∏–≤–æ–≤ ‚Üí –±–æ–ª—å—à–µ –ø–∞–º—è—Ç–∏
const getLengthSlice = (arr) => {
  if (arr[0] === undefined) return 0;
  return 1 + getLengthSlice(arr.slice(1));
};

// ‚úÖ –ë—ã—Å—Ç—Ä–∞—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∏–Ω–¥–µ–∫—Å –≤–º–µ—Å—Ç–æ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –º–∞—Å—Å–∏–≤–æ–≤
// –†–∞–±–æ—Ç–∞–µ—Ç –≤ —Ç–æ–º –∂–µ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–º —Å—Ç–∏–ª–µ, –Ω–æ –≥–æ—Ä–∞–∑–¥–æ —ç–∫–æ–Ω–æ–º–Ω–µ–µ –ø–æ –ø–∞–º—è—Ç–∏
const getLengthIndex = (arr, i = 0) => {
  if (arr[i] === undefined) return 0;
  return 1 + getLengthIndex(arr, i + 1);
};

// üìè –ó–∞–º–µ—Ä –ø–∞–º—è—Ç–∏ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ "–º–µ–¥–ª–µ–Ω–Ω–æ–π" slice-—Ä–µ–∫—É—Ä—Å–∏–∏
measure(() => getLengthSlice(arr), 'Slice recursion');

// üìè –ó–∞–º–µ—Ä –ø–∞–º—è—Ç–∏ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ "–±—ã—Å—Ç—Ä–æ–π" index-—Ä–µ–∫—É—Ä—Å–∏–∏
measure(() => getLengthIndex(arr), 'Index recursion');

/*
üß† –ß—Ç–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å:
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
- [Slice recursion] Used heap: ~X MB  ‚Üê –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –¥–ª–∏–Ω—ã –º–∞—Å—Å–∏–≤–∞ –∏ –Ω–∞–≥—Ä—É–∑–∫–∏
- [Index recursion] Used heap: ~0 MB  ‚Üê –ø–æ—á—Ç–∏ –Ω–µ —Ä–∞—Å—Ö–æ–¥—É–µ—Ç –ø–∞–º—è—Ç—å

üìå –ü–æ—á–µ–º—É –±–µ–∑ GC –≤–∞–∂–µ–Ω?
- –ó–Ω–∞—á–µ–Ω–∏—è heapUsed –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç "–≥—Ä—è–∑–Ω—É—é" –∫–∞—Ä—Ç–∏–Ω—É: —á—Ç–æ –æ—Å—Ç–∞–ª–æ—Å—å –≤ –ø–∞–º—è—Ç–∏
- –í —Ä–µ–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö GC –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –Ω–µ —Å—Ä–∞–∑—É, –∏ –º—É—Å–æ—Ä –º–æ–∂–µ—Ç –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è
- –≠—Ç–æ —Ö–æ—Ä–æ—à–æ –æ—Ç—Ä–∞–∂–∞–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∫–æ–¥–∞ **–≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ**, –≥–¥–µ –Ω–µ—Ç —Ä—É—á–Ω–æ–≥–æ GC

üìå –ü–æ—á–µ–º—É slice "–∂—Ä—ë—Ç" –ø–∞–º—è—Ç—å:
- –ù–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ —Å–æ–∑–¥–∞—ë—Ç—Å—è –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ ‚Üí –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
- –≠—Ç–∏ –æ–±—ä–µ–∫—Ç—ã –∫–æ–ø—è—Ç—Å—è –≤ –ø–∞–º—è—Ç–∏ –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ GC –∏—Ö –Ω–µ —É–±–µ—Ä—ë—Ç
- –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –±–æ–ª—å—à–æ–π ‚Äî –ª–µ–≥–∫–æ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≤—ã—à–µ–Ω–∏–µ heapTotal –∏ –¥–∞–∂–µ GC

üìå –ü–æ—á–µ–º—É index ‚Äî –ª—É—á—à–µ:
- –ù–µ—Ç –Ω–æ–≤—ã—Ö –º–∞—Å—Å–∏–≤–æ–≤, —Ç–æ–ª—å–∫–æ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞
- –û–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –º–∞—Å—Å–∏–≤ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–µ—Å—å —Ü–∏–∫–ª
- –†–µ–∫—É—Ä—Å–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–∞ (–¥–æ —Ä–∞–∑—É–º–Ω–æ–π –≥–ª—É–±–∏–Ω—ã) –∏ –ø–∞–º—è—Ç—å –ø–æ—á—Ç–∏ –Ω–µ —Ç—Ä–∞—Ç–∏—Ç—Å—è
*/
